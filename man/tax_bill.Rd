% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tax_bill.R
\name{tax_bill}
\alias{tax_bill}
\title{Calculate an approximate Cook County property tax bill}
\usage{
tax_bill(
  year_vec,
  pin_vec,
  tax_code_vec = lookup_tax_code(year_vec, pin_vec),
  eav_vec = lookup_eav(year_vec, pin_vec),
  eq_fct_vec = lookup_equalization_factor(year_vec),
  exemptions_df = lookup_exemptions(year_vec, pin_vec),
  levies_df = lookup_levies(year_vec, tax_code_vec),
  agency_eavs_df = lookup_agency_eavs(year_vec, tax_code_vec),
  tifs_df = lookup_tifs(year_vec, tax_code_vec),
  simplify = TRUE
)
}
\arguments{
\item{year_vec}{Numeric vector of tax years for which to return bills.}

\item{pin_vec}{Character vector of 14-digit Property Index Numbers (PINs)
with no dashes or spaces.}

\item{tax_code_vec}{Character vector of 5-digit Cook County tax codes. These
codes are included on individual property tax bills. If missing, the
\code{\link{lookup_tax_code}} function will be used to retrieve tax codes
based on \code{year_vec} and \code{pin_vec}.}

\item{eav_vec}{Numeric vector of Equalized Assessed Values (EAVs) for each
combination of year and PIN. If missing, the \code{\link{lookup_eav}}
function will be used to retrieve each PIN's EAV based on \code{year_vec}
and \code{pin_vec}.}

\item{eq_fct_vec}{Numeric vector of Cook County equalization factors for each
year. If missing \code{\link{lookup_equalization_factor}} will be used to
retrieve the equalization factor specific to \code{year_vec}.}

\item{exemptions_df}{Data frame containing the exemptions specific to each
PIN and year. Data \emph{must} be identical to the format returned by
\code{\link{lookup_exemptions}}. If missing,
\code{\link{lookup_exemptions}} will be used to retrieve each PIN's
exemptions based on \code{year_vec} and \code{pin_vec}.}

\item{levies_df}{Data frame containing levies for each taxing district in
the specified tax code. Data \emph{must} be identical to the format returned by
\code{\link{lookup_levies}}. If missing,
\code{\link{lookup_levies}} will be used to retrieve each taxing
jurisdiction's levies based on \code{year_vec} and \code{tax_code_vec}.}

\item{agency_eavs_df}{Data frame containing total EAVs (the base) for each
taxing district in the specified tax code. Data \emph{must} be identical to the
format returned by \code{\link{lookup_agency_eavs}}. If missing,
\code{\link{lookup_agency_eavs}} will be used to retrieve each taxing
jurisdiction's base based on \code{year_vec} and \code{tax_code_vec}.}

\item{tifs_df}{Data frame containing any TIF applicable to the specified
tax code. Will be an empty data frame if no TIF exists for the property.
Data \emph{must} be identical to the format returned by
\code{\link{lookup_tifs}}. If missing, \code{\link{lookup_tifs}} will be
used to retrieve the tax code's TIF share based on \code{year_vec}
and \code{tax_code_vec}.}

\item{simplify}{Default TRUE. Boolean for whether or not to keep only the
the most vital columns in the final output, including tax amounts, rates,
and amounts to TIFs.}
}
\value{
A data frame which contains a tax bill for each specified PIN and
year. Each tax bill is broken out by taxing district, meaning there is a
row for each district relevant to each PIN. Most PINs have 10-15 districts
(rows) associated with each year.

Note that unlike official tax bills, TIFs are not broken out into a
separate line item and instead are contained in their own column(s).
}
\description{
This function calculates a Cook County property tax bill using
levy, base, and TIF information from the Cook County Clerk. It allows users
to simulate different tax scenarios by changing the input data. For
example, this function can answer the following questions:
\itemize{
\item What would my tax bill be if my assessed value was $10K lower?
\item What would my tax bill be if Chicago increased its levy by 1\%?
\item What would my tax bill be if my property was in a different neighborhood?
\item What would my tax bill be if a large new development was added to
my neighborhood?
}

Most of the data necessary to answer these questions is built into the
package. Data for the most current tax year is usually available the
following year (2020 data is available in 2021). If needed, users can
supply current tax year data manually. See vignettes for more information.
}
\details{
Note that all vector inputs (suffixed with \code{_vec}) can be
either length 1 or the same length as the longest vector.

The district-level tax amounts returned by this function will \emph{not}
perfectly match the amounts on real tax bills. This is due to rounding
and truncating that occurs in the real system. Most estimated amounts will
still be within a few dollars of the amounts on real bills.
}
\note{
This package is for educational purposes only.
The Assessor's office releases the package without any representations or
warranties of any kind, whether express or implied. Any data, figures, or
amounts contained within the package, used by the package, or produced by
the package are solely for illustrative purposes. Any results produced by
this package as distributed are official and should not be relied upon for
any business or commercial purpose. They merely demonstrate the package's
features. The Assessor's office expressly disclaims any liability for
any entity's reliance on this package.
}
\examples{

# Get a single tax bill
tax_bill(2019, "14081020210000")

# Get tax bills for multiple years
tax_bill(2017:2019, "14081020210000")

# Get multiple tax bills for different PINs and years
tax_bill(c(2014, 2019), c("14081020210000", "07133020190000"))

# Get a tax bill with a new EAV
tax_bill(2019, "14081020210000", eav_vec = 200000)

# Get a tax bill for a new location
tax_bill(2019, "14081020210000", tax_code_vec = "35011")
}
\concept{tax_bill}
